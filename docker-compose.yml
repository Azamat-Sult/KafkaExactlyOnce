version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

#  postgres-my-db:
#    container_name: postgres-my-db
#    image: postgres
#    environment:
#      POSTGRES_DB: postgres
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
#    volumes:
#      - ./postgres-my-db:/data/postgres
#    expose:
#      - "5432"
#    ports:
#      - "5432:5432"
#    command: -p 5432
#    restart: always

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    links:
      - kafka-ui

#  consumer:
#    build:
#      context: .
#      dockerfile: consumer/Dockerfile
#    ports:
#      - 8081:8080
#    links:
#      - kafka-ui
#    depends_on:
#      - postgres-my-db
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker